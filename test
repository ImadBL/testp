const fs = require("fs");
const path = require("path");

// Chemins des fichiers
const masterFilePath = "db/changelog-master.xml"; // Chemin vers le fichier master.xml
const changelogDirPath = "db/changelog/"; // Répertoire des changelogs

// Fonction pour mettre à jour le fichier master.xml
function updateMasterFile() {
  try {
    // Lire le contenu du fichier master.xml
    const masterFileContent = fs.readFileSync(masterFilePath, "utf-8");

    // Identifier les fichiers changelog existants
    const includeRegex = /<include file="([^"]+)"\s*\/>/g;
    const existingFiles = [];
    let match;
    while ((match = includeRegex.exec(masterFileContent)) !== null) {
      existingFiles.push(match[1]);
    }

    // Lister les fichiers changelog dans le répertoire
    const changelogFiles = fs
      .readdirSync(changelogDirPath)
      .filter((file) => file.endsWith(".xml"))
      .map((file) => path.join("db/changelog", file));

    // Filtrer les nouveaux fichiers à ajouter
    const newFiles = changelogFiles.filter((file) => !existingFiles.includes(file));

    if (newFiles.length === 0) {
      console.log("Aucun nouveau fichier à ajouter.");
      return;
    }

    // Construire les nouvelles balises <include>
    const newIncludes = newFiles
      .map((file) => `    <include file="${file}" />`)
      .join("\n");

    // Insérer les nouvelles balises avant la fermeture de <databaseChangeLog>
    const updatedContent = masterFileContent.replace(
      /<\/databaseChangeLog>/,
      `${newIncludes}\n</databaseChangeLog>`
    );

    // Écrire les modifications dans master.xml
    fs.writeFileSync(masterFilePath, updatedContent, "utf-8");
    console.log("Le fichier master.xml a été mis à jour avec succès !");
    console.log("Fichiers ajoutés :", newFiles);
  } catch (err) {
    console.error("Erreur lors de la mise à jour du fichier master.xml :", err);
  }
}

// Exécuter la fonction
updateMasterFile();
